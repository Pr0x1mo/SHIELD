
[paths]
train = null
dev = null
vectors = null
init_tok2vec = null

[system]
gpu_allocator = "pytorch"

[nlp]
lang = "en"
pipeline = ["ner"]
batch_size = 1000

[components]

[components.ner]
factory = "ner"

[components.ner.model]
@architectures = "spacy.TransitionBasedParser.v2"
state_type = "ner"
hidden_width = 64
maxout_pieces = 2
use_upper = false
nO = null

[components.ner.model.tok2vec]
@architectures = "spacy.Tok2Vec.v2"

[components.ner.model.tok2vec.embed]
@architectures = "spacy.MultiHashEmbed.v2"
width = 64
rows = [2000, 2000, 1000, 1000, 500, 500]
attrs = ["ORTH", "LOWER", "PREFIX", "SUFFIX", "SHAPE", "ID"]
include_static_vectors = false

[components.ner.model.tok2vec.encode]
@architectures = "spacy.MaxoutWindowEncoder.v2"
width = 64
depth = 2
window_size = 1
maxout_pieces = 3

[training]
dropout = 0.2
accumulate_gradient = 1
patience = 1000
max_epochs = 10
eval_frequency = 5
seed = 0
gpu_allocator = "pytorch"

[training.optimizer]
@optimizers = "Adam.v1"
learn_rate = 0.001
L2_is_weight_decay = true
L2 = 0.0
grad_clip = 1.0

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = true
tolerance = 0.2
get_length = null

[training.batcher.size]
@schedules = "compounding.v1"
start = 100.0
stop = 1000.0
compound = 1.001

[initialize]
vectors = null
init_tok2vec = null
vocab_data = null
lookups = null
before_init = null
after_init = null

[corpora]

[corpora.train]
@readers = "spacy.Corpus.v1"
path = "train.spacy"

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = "dev.spacy"
